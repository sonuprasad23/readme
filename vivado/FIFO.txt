library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity FIFO is
Port ( DATAIN : in STD_LOGIC_VECTOR (7 downto 0);
CLK : in STD_LOGIC;
RST : in STD_LOGIC;
EN : in STD_LOGIC;

W : in STD_LOGIC;
RED : out STD_LOGIC;
DATAOUT : out STD_LOGIC_VECTOR (7 downto 0));

end FIFO;
architecture Behavioral of FIFO is
signal WPTR,RPTR :STD_LOGIC_VECTOR (3 downto 0);
TYPE FARRAY IS ARRAY(15 DOWNTO 0) OF STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL MEMO : FARRAY;
begin
PROCESS(CLK,RST)
BEGIN
IF RST='1' THEN
WPTR <= "0000";
RPTR <= "0000";
RED <= '0';
ELSE IF (CLK'EVENT AND CLK='1') THEN
IF (EN='1') THEN
IF (W='1') THEN
IF (WPTR<"1111") THEN
MEMO(CONV_INTEGER(WPTR)) <= DATAIN;
WPTR <= WPTR + 1;
ELSE
RED <= '1';
END IF;
ELSE
IF RPTR < WPTR THEN
RED <= '0';
DATAOUT <= MEMO(CONV_INTEGER(RPTR));
RPTR <= RPTR + 1;
ELSE
RED <= '1';
DATAOUT <= "00000000";
END IF;
END IF;
END IF;
END IF;

END IF;
END PROCESS;

end Behavioral;